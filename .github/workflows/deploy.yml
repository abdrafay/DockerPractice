name: Build and Deploy Flask App on EC2 Instance

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir flask

      - name: Build Docker image
        run: |
          docker build -t testing_docker .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 # specify your region

      - name: Log in to Amazon ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.eu-north-1.amazonaws.com

      - name: Build and tag Docker image
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          docker build -t testing_docker .
          docker tag testing_docker:latest ${AWS_ACCOUNT_ID}.dkr.ecr.eu-north-1.amazonaws.com/testing_docker:latest

      - name: Push Docker image to Amazon ECR
        env:
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
        run: |
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.eu-north-1.amazonaws.com/testing_docker:latest

      - name: Run on EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY_B64 }}
          USER: ${{ secrets.EC2_USER }}
          HOST: ${{ secrets.EC2_HOST }}
          AWS_REGION: eu-north-1
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}

        run: |
          echo "${PRIVATE_KEY}" | base64 --decode > private_key.pem
          chmod 600 private_key.pem
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USER@$HOST "
            # Login to Amazon ECR
            aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
            
            # Pull the latest image from ECR
            docker pull ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/testing_docker:latest
            
            # Stop and remove any existing container
            docker stop testing_docker || true &&
            docker rm testing_docker || true &&
            
            # Run the new container with the pulled image
            docker run -d --name testing_docker -p 80:5000 ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/testing_docker:latest
          "